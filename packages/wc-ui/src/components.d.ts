/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { GridGutterType, ThemeType } from "./types";
import { SpaceSize } from "./components/space/index";
export { GridGutterType, ThemeType } from "./types";
export { SpaceSize } from "./components/space/index";
export namespace Components {
    interface WcButton {
        /**
          * 按钮是否为块级元素，默认为 `false`
         */
        "block": boolean;
        /**
          * 是否为暗黑模式，默认为 `false`
         */
        "dark": boolean;
        /**
          * 按钮是否禁用，默认为 `false`
         */
        "disabled": boolean;
        /**
          * 主题色阶号，可选值为 `1` `2` `3` `4` `5` `6` `7` `8` `9` `10`
         */
        "level": number;
        /**
          * 按钮是否加载中，默认为 `false`
         */
        "loading": boolean;
        /**
          * 矩形圆角大小，单位为 `px`，默认为 `4px`
         */
        "radius": number;
        /**
          * 按钮形状，可选值为 `rectangle` `square` `round` `circle`，默认为 `rectangle`
         */
        "shape": 'rectangle' | 'square' | 'round' | 'circle';
        /**
          * 按钮尺寸，可选值为 `mini` `small` `medium` `large` 或者具体的数值，默认为 `medium`
         */
        "size": 'mini' | 'small' | 'medium' | 'large' | number;
        /**
          * 按钮文本，也可通过默认插槽设置文本
         */
        "text": string;
        /**
          * 按钮风格，可选值为 `default` `primary` `success` `warning` `danger`，默认为 `default`
         */
        "theme": ThemeType;
        /**
          * 按钮类型，可选值为 `submit` `reset` `button`，默认为 `button`
         */
        "type": 'submit' | 'reset' | 'button';
        /**
          * 按钮变体，可选值为 `base` `outline` `dashed` `text` `contained`，默认为 `base`
         */
        "variant": 'base' | 'outline' | 'dashed' | 'text' | 'contained';
        /**
          * 按钮是否可见，默认为 `true`
         */
        "visible": boolean;
    }
    interface WcButtonGroup {
        /**
          * 按钮主题
         */
        "theme": any;
    }
    interface WcCol {
        "gutter": GridGutterType | GridGutterType[];
        "id": string;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 992px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 992px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "lg": number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 768px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 768px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "md": number | object;
        /**
          * 栅格左侧的间隔格数，间隔内不可以有栅格
          * @zh 栅格左侧的间隔格数，间隔内不可以有栅格
          * @en The number of interval columns on the left side of the grid, and there can be no grid in the interval
         */
        "offset": number;
        /**
          * 栅格向左移动格数
          * @zh 栅格向左移动格数
          * @en The number of grid moves to the left
         */
        "pull": number;
        /**
          * 栅格向右移动格数
          * @zh 栅格向右移动格数
          * @en The number of grid moves to the right
         */
        "push": number;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 576px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 576px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "sm": number | object;
        /**
          * 栅格占据的列数
          * @zh 栅格占据的列数，24 栅格系统中的栅格占位格数，为 0 时相当于 display: none
          * @en The number of columns occupied by the grid
         */
        "span": number;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 1200px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 1200px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xl": number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh < 576px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en < 576px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xs": number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 1600px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 1600px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xxl": number | object;
    }
    interface WcDivider {
        /**
          * 方向，可选值为 horizontal 或 vertical， 默认为 horizontal
         */
        "direction": 'horizontal' | 'vertical';
        /**
          * 分割线宽度或者高度，单位 px
         */
        "size": number;
        /**
          * 分割线间距，水平方向时是上下间距，垂直方向时是左右间距，单位 px
         */
        "space": number;
        /**
          * 文字位置，可选值为 left 或 right 或 center， 默认为 center
         */
        "textPosition": 'left' | 'right' | 'center';
        /**
          * 分割线样式，可选值为 solid 或 dashed 或 dotted 或 double， 默认为 solid
         */
        "type": 'solid' | 'dashed' | 'dotted' | 'double';
    }
    interface WcGlobalStyle {
        /**
          * @zh 全局样式表路径
          * @en the path of the global stylesheet
         */
        "src": string;
    }
    interface WcIcon {
        /**
          * 自定义类名
         */
        "customClass": string;
        /**
          * 自定义样式
         */
        "customStyle": string | object;
        /**
          * 是否旋转
         */
        "spin": boolean;
        /**
          * 图标类型
         */
        "type": string;
    }
    interface WcIconFont {
    }
    interface WcLink {
        /**
          * 是否在新窗口打开
         */
        "blank": boolean;
        /**
          * 是否为暗黑模式，默认为 `false`
         */
        "dark": false;
        /**
          * 链接是否禁用
         */
        "disabled": boolean;
        /**
          * 鼠标悬浮时是否存在底色，默认为 `true`
         */
        "hoverable": boolean;
        /**
          * 链接地址
         */
        "href": string;
        /**
          * 是否使用图标，默认为 `false`
         */
        "icon": boolean;
        /**
          * 是否在加载中，默认为 `false`
         */
        "loading": boolean;
        /**
          * 链接的状态
         */
        "status": 'default' | 'success' | 'warning' | 'danger';
    }
    interface WcRow {
        /**
          * 纵向排列，可选值为 `start` `end` `center` `stretch`
          * @zh 纵向排列，可选值为 `start` `end` `center` `stretch`
          * @en Vertical arrangement, optional values are `start` `end` `center` `stretch`
         */
        "align": 'start' | 'end' | 'center' | 'stretch';
        /**
          * 是否启用 flex 布局
          * @zh 是否启用 flex 布局
          * @en Whether to enable flex layout
         */
        "flex": boolean;
        /**
          * 栅格间隔，支持响应式，可为栅格数或一个包含其他属性的对象，如：{ xs: 8, sm: 16, md: 24 } + 数字：间隔为 0 时相当于 display: none + 数组：[水平间隔, 垂直间隔]，如：[8, 16] + 对象：{ xs: 数字, sm: 数字, md: 数字 }，如：{ xs: 8, sm: 16, md: 24 } + 响应式：{ xs: 数字 | 数组, sm: 数字 | 数组, md: 数字 | 数组 }
          * @zh 栅格间隔，支持响应式，可为栅格数或一个包含其他属性的对象，如：{ xs: 8, sm: 16, md: 24 }
          * @en Grid interval, support responsive, can be the number of columns or an object containing other attributes, such as: { xs: 8, sm: 16, md: 24 }
         */
        "gutter": GridGutterType | GridGutterType[];
        /**
          * flex 布局下的垂直对齐方式，可选值为 `start` `end` `center` `space-around` `space-between`
          * @zh flex 布局下的垂直对齐方式，可选值为 `start` `end` `center` `space-around` `space-between`
          * @en Vertical alignment in flex layout, optional values are `start` `end` `center` `space-around` `space-between`
         */
        "justify": 'start' | 'end' | 'center' | 'space-around' | 'space-between';
        /**
          * `Col` 是否自动换行
          * @zh `Col` 是否自动换行
          * @en Whether `Col` wraps automatically
         */
        "wrap": boolean;
    }
    interface WcSpace {
        /**
          * 对齐方式，可选值为 `start` `end` `center` `baseline` `stretch`，默认为 `start`
         */
        "align": 'start' | 'end' | 'center' | 'baseline' | 'stretch';
        /**
          * 子元素是否为块级元素
         */
        "block": boolean;
        /**
          * 节点类名
         */
        "customClass": string | string[];
        /**
          * 节点样式
         */
        "customStyle": {
        [key: string]: string
    } | string;
        /**
          * 间距方向，可选值为 `horizontal` `vertical`，默认为 `horizontal`
         */
        "direction": 'horizontal' | 'vertical';
        /**
          * 全局样式表路径
          * @zh 全局样式表路径
          * @en the path of the global stylesheet
         */
        "globalStyleSrc": string;
        /**
          * 间距大小，可选值为 `mini` `small` `medium` `large` 或者具体的数值，默认为 `small`
         */
        "size": SpaceSize | SpaceSize[];
        /**
          * 是否为环绕排列，默认为 `false`
         */
        "wrap": boolean;
    }
    interface WcSpaceItem {
    }
    interface WcTeleport {
        /**
          * 传送的目标元素的选择器
         */
        "to": string;
    }
}
export interface WcButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcButtonElement;
}
export interface WcButtonGroupCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcButtonGroupElement;
}
export interface WcSpaceCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcSpaceElement;
}
export interface WcSpaceItemCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLWcSpaceItemElement;
}
declare global {
    interface HTMLWcButtonElement extends Components.WcButton, HTMLStencilElement {
    }
    var HTMLWcButtonElement: {
        prototype: HTMLWcButtonElement;
        new (): HTMLWcButtonElement;
    };
    interface HTMLWcButtonGroupElement extends Components.WcButtonGroup, HTMLStencilElement {
    }
    var HTMLWcButtonGroupElement: {
        prototype: HTMLWcButtonGroupElement;
        new (): HTMLWcButtonGroupElement;
    };
    interface HTMLWcColElement extends Components.WcCol, HTMLStencilElement {
    }
    var HTMLWcColElement: {
        prototype: HTMLWcColElement;
        new (): HTMLWcColElement;
    };
    interface HTMLWcDividerElement extends Components.WcDivider, HTMLStencilElement {
    }
    var HTMLWcDividerElement: {
        prototype: HTMLWcDividerElement;
        new (): HTMLWcDividerElement;
    };
    interface HTMLWcGlobalStyleElement extends Components.WcGlobalStyle, HTMLStencilElement {
    }
    var HTMLWcGlobalStyleElement: {
        prototype: HTMLWcGlobalStyleElement;
        new (): HTMLWcGlobalStyleElement;
    };
    interface HTMLWcIconElement extends Components.WcIcon, HTMLStencilElement {
    }
    var HTMLWcIconElement: {
        prototype: HTMLWcIconElement;
        new (): HTMLWcIconElement;
    };
    interface HTMLWcIconFontElement extends Components.WcIconFont, HTMLStencilElement {
    }
    var HTMLWcIconFontElement: {
        prototype: HTMLWcIconFontElement;
        new (): HTMLWcIconFontElement;
    };
    interface HTMLWcLinkElement extends Components.WcLink, HTMLStencilElement {
    }
    var HTMLWcLinkElement: {
        prototype: HTMLWcLinkElement;
        new (): HTMLWcLinkElement;
    };
    interface HTMLWcRowElement extends Components.WcRow, HTMLStencilElement {
    }
    var HTMLWcRowElement: {
        prototype: HTMLWcRowElement;
        new (): HTMLWcRowElement;
    };
    interface HTMLWcSpaceElement extends Components.WcSpace, HTMLStencilElement {
    }
    var HTMLWcSpaceElement: {
        prototype: HTMLWcSpaceElement;
        new (): HTMLWcSpaceElement;
    };
    interface HTMLWcSpaceItemElement extends Components.WcSpaceItem, HTMLStencilElement {
    }
    var HTMLWcSpaceItemElement: {
        prototype: HTMLWcSpaceItemElement;
        new (): HTMLWcSpaceItemElement;
    };
    interface HTMLWcTeleportElement extends Components.WcTeleport, HTMLStencilElement {
    }
    var HTMLWcTeleportElement: {
        prototype: HTMLWcTeleportElement;
        new (): HTMLWcTeleportElement;
    };
    interface HTMLElementTagNameMap {
        "wc-button": HTMLWcButtonElement;
        "wc-button-group": HTMLWcButtonGroupElement;
        "wc-col": HTMLWcColElement;
        "wc-divider": HTMLWcDividerElement;
        "wc-global-style": HTMLWcGlobalStyleElement;
        "wc-icon": HTMLWcIconElement;
        "wc-icon-font": HTMLWcIconFontElement;
        "wc-link": HTMLWcLinkElement;
        "wc-row": HTMLWcRowElement;
        "wc-space": HTMLWcSpaceElement;
        "wc-space-item": HTMLWcSpaceItemElement;
        "wc-teleport": HTMLWcTeleportElement;
    }
}
declare namespace LocalJSX {
    interface WcButton {
        /**
          * 按钮是否为块级元素，默认为 `false`
         */
        "block"?: boolean;
        /**
          * 是否为暗黑模式，默认为 `false`
         */
        "dark"?: boolean;
        /**
          * 按钮是否禁用，默认为 `false`
         */
        "disabled"?: boolean;
        /**
          * 主题色阶号，可选值为 `1` `2` `3` `4` `5` `6` `7` `8` `9` `10`
         */
        "level"?: number;
        /**
          * 按钮是否加载中，默认为 `false`
         */
        "loading"?: boolean;
        /**
          * 点击事件
         */
        "onClick"?: (event: WcButtonCustomEvent<MouseEvent>) => void;
        /**
          * 矩形圆角大小，单位为 `px`，默认为 `4px`
         */
        "radius"?: number;
        /**
          * 按钮形状，可选值为 `rectangle` `square` `round` `circle`，默认为 `rectangle`
         */
        "shape"?: 'rectangle' | 'square' | 'round' | 'circle';
        /**
          * 按钮尺寸，可选值为 `mini` `small` `medium` `large` 或者具体的数值，默认为 `medium`
         */
        "size"?: 'mini' | 'small' | 'medium' | 'large' | number;
        /**
          * 按钮文本，也可通过默认插槽设置文本
         */
        "text"?: string;
        /**
          * 按钮风格，可选值为 `default` `primary` `success` `warning` `danger`，默认为 `default`
         */
        "theme"?: ThemeType;
        /**
          * 按钮类型，可选值为 `submit` `reset` `button`，默认为 `button`
         */
        "type"?: 'submit' | 'reset' | 'button';
        /**
          * 按钮变体，可选值为 `base` `outline` `dashed` `text` `contained`，默认为 `base`
         */
        "variant"?: 'base' | 'outline' | 'dashed' | 'text' | 'contained';
        /**
          * 按钮是否可见，默认为 `true`
         */
        "visible"?: boolean;
    }
    interface WcButtonGroup {
        "onWcClick"?: (event: WcButtonGroupCustomEvent<any>) => void;
        /**
          * 按钮主题
         */
        "theme"?: any;
    }
    interface WcCol {
        "gutter"?: GridGutterType | GridGutterType[];
        "id"?: string;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 992px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 992px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "lg"?: number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 768px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 768px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "md"?: number | object;
        /**
          * 栅格左侧的间隔格数，间隔内不可以有栅格
          * @zh 栅格左侧的间隔格数，间隔内不可以有栅格
          * @en The number of interval columns on the left side of the grid, and there can be no grid in the interval
         */
        "offset"?: number;
        /**
          * 栅格向左移动格数
          * @zh 栅格向左移动格数
          * @en The number of grid moves to the left
         */
        "pull"?: number;
        /**
          * 栅格向右移动格数
          * @zh 栅格向右移动格数
          * @en The number of grid moves to the right
         */
        "push"?: number;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 576px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 576px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "sm"?: number | object;
        /**
          * 栅格占据的列数
          * @zh 栅格占据的列数，24 栅格系统中的栅格占位格数，为 0 时相当于 display: none
          * @en The number of columns occupied by the grid
         */
        "span"?: number;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 1200px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 1200px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xl"?: number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh < 576px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en < 576px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xs"?: number | object;
        /**
          * 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @zh >= 1600px 栅格占据的列数，响应式栅格，可为栅格数或一个包含其他属性的对象
          * @en >= 1600px The number of columns occupied by the grid, responsive grid, can be the number of columns or an object containing other attributes
         */
        "xxl"?: number | object;
    }
    interface WcDivider {
        /**
          * 方向，可选值为 horizontal 或 vertical， 默认为 horizontal
         */
        "direction"?: 'horizontal' | 'vertical';
        /**
          * 分割线宽度或者高度，单位 px
         */
        "size"?: number;
        /**
          * 分割线间距，水平方向时是上下间距，垂直方向时是左右间距，单位 px
         */
        "space"?: number;
        /**
          * 文字位置，可选值为 left 或 right 或 center， 默认为 center
         */
        "textPosition"?: 'left' | 'right' | 'center';
        /**
          * 分割线样式，可选值为 solid 或 dashed 或 dotted 或 double， 默认为 solid
         */
        "type"?: 'solid' | 'dashed' | 'dotted' | 'double';
    }
    interface WcGlobalStyle {
        /**
          * @zh 全局样式表路径
          * @en the path of the global stylesheet
         */
        "src"?: string;
    }
    interface WcIcon {
        /**
          * 自定义类名
         */
        "customClass"?: string;
        /**
          * 自定义样式
         */
        "customStyle"?: string | object;
        /**
          * 是否旋转
         */
        "spin"?: boolean;
        /**
          * 图标类型
         */
        "type"?: string;
    }
    interface WcIconFont {
    }
    interface WcLink {
        /**
          * 是否在新窗口打开
         */
        "blank"?: boolean;
        /**
          * 是否为暗黑模式，默认为 `false`
         */
        "dark"?: false;
        /**
          * 链接是否禁用
         */
        "disabled"?: boolean;
        /**
          * 鼠标悬浮时是否存在底色，默认为 `true`
         */
        "hoverable"?: boolean;
        /**
          * 链接地址
         */
        "href"?: string;
        /**
          * 是否使用图标，默认为 `false`
         */
        "icon"?: boolean;
        /**
          * 是否在加载中，默认为 `false`
         */
        "loading"?: boolean;
        /**
          * 链接的状态
         */
        "status"?: 'default' | 'success' | 'warning' | 'danger';
    }
    interface WcRow {
        /**
          * 纵向排列，可选值为 `start` `end` `center` `stretch`
          * @zh 纵向排列，可选值为 `start` `end` `center` `stretch`
          * @en Vertical arrangement, optional values are `start` `end` `center` `stretch`
         */
        "align"?: 'start' | 'end' | 'center' | 'stretch';
        /**
          * 是否启用 flex 布局
          * @zh 是否启用 flex 布局
          * @en Whether to enable flex layout
         */
        "flex"?: boolean;
        /**
          * 栅格间隔，支持响应式，可为栅格数或一个包含其他属性的对象，如：{ xs: 8, sm: 16, md: 24 } + 数字：间隔为 0 时相当于 display: none + 数组：[水平间隔, 垂直间隔]，如：[8, 16] + 对象：{ xs: 数字, sm: 数字, md: 数字 }，如：{ xs: 8, sm: 16, md: 24 } + 响应式：{ xs: 数字 | 数组, sm: 数字 | 数组, md: 数字 | 数组 }
          * @zh 栅格间隔，支持响应式，可为栅格数或一个包含其他属性的对象，如：{ xs: 8, sm: 16, md: 24 }
          * @en Grid interval, support responsive, can be the number of columns or an object containing other attributes, such as: { xs: 8, sm: 16, md: 24 }
         */
        "gutter"?: GridGutterType | GridGutterType[];
        /**
          * flex 布局下的垂直对齐方式，可选值为 `start` `end` `center` `space-around` `space-between`
          * @zh flex 布局下的垂直对齐方式，可选值为 `start` `end` `center` `space-around` `space-between`
          * @en Vertical alignment in flex layout, optional values are `start` `end` `center` `space-around` `space-between`
         */
        "justify"?: 'start' | 'end' | 'center' | 'space-around' | 'space-between';
        /**
          * `Col` 是否自动换行
          * @zh `Col` 是否自动换行
          * @en Whether `Col` wraps automatically
         */
        "wrap"?: boolean;
    }
    interface WcSpace {
        /**
          * 对齐方式，可选值为 `start` `end` `center` `baseline` `stretch`，默认为 `start`
         */
        "align"?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';
        /**
          * 子元素是否为块级元素
         */
        "block"?: boolean;
        /**
          * 节点类名
         */
        "customClass"?: string | string[];
        /**
          * 节点样式
         */
        "customStyle"?: {
        [key: string]: string
    } | string;
        /**
          * 间距方向，可选值为 `horizontal` `vertical`，默认为 `horizontal`
         */
        "direction"?: 'horizontal' | 'vertical';
        /**
          * 全局样式表路径
          * @zh 全局样式表路径
          * @en the path of the global stylesheet
         */
        "globalStyleSrc"?: string;
        "onWcClick"?: (event: WcSpaceCustomEvent<any>) => void;
        /**
          * 间距大小，可选值为 `mini` `small` `medium` `large` 或者具体的数值，默认为 `small`
         */
        "size"?: SpaceSize | SpaceSize[];
        /**
          * 是否为环绕排列，默认为 `false`
         */
        "wrap"?: boolean;
    }
    interface WcSpaceItem {
        "onWcClick"?: (event: WcSpaceItemCustomEvent<any>) => void;
    }
    interface WcTeleport {
        /**
          * 传送的目标元素的选择器
         */
        "to"?: string;
    }
    interface IntrinsicElements {
        "wc-button": WcButton;
        "wc-button-group": WcButtonGroup;
        "wc-col": WcCol;
        "wc-divider": WcDivider;
        "wc-global-style": WcGlobalStyle;
        "wc-icon": WcIcon;
        "wc-icon-font": WcIconFont;
        "wc-link": WcLink;
        "wc-row": WcRow;
        "wc-space": WcSpace;
        "wc-space-item": WcSpaceItem;
        "wc-teleport": WcTeleport;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "wc-button": LocalJSX.WcButton & JSXBase.HTMLAttributes<HTMLWcButtonElement>;
            "wc-button-group": LocalJSX.WcButtonGroup & JSXBase.HTMLAttributes<HTMLWcButtonGroupElement>;
            "wc-col": LocalJSX.WcCol & JSXBase.HTMLAttributes<HTMLWcColElement>;
            "wc-divider": LocalJSX.WcDivider & JSXBase.HTMLAttributes<HTMLWcDividerElement>;
            "wc-global-style": LocalJSX.WcGlobalStyle & JSXBase.HTMLAttributes<HTMLWcGlobalStyleElement>;
            "wc-icon": LocalJSX.WcIcon & JSXBase.HTMLAttributes<HTMLWcIconElement>;
            "wc-icon-font": LocalJSX.WcIconFont & JSXBase.HTMLAttributes<HTMLWcIconFontElement>;
            "wc-link": LocalJSX.WcLink & JSXBase.HTMLAttributes<HTMLWcLinkElement>;
            "wc-row": LocalJSX.WcRow & JSXBase.HTMLAttributes<HTMLWcRowElement>;
            "wc-space": LocalJSX.WcSpace & JSXBase.HTMLAttributes<HTMLWcSpaceElement>;
            "wc-space-item": LocalJSX.WcSpaceItem & JSXBase.HTMLAttributes<HTMLWcSpaceItemElement>;
            "wc-teleport": LocalJSX.WcTeleport & JSXBase.HTMLAttributes<HTMLWcTeleportElement>;
        }
    }
}
